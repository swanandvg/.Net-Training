//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class BankingDBEntities : DbContext
{
    public BankingDBEntities()
        : base("name=BankingDBEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<AccountDetail> AccountDetails { get; set; }
    public virtual DbSet<BranchInfo> BranchInfoes { get; set; }

    public virtual int sp_deleteAccount(Nullable<int> accNo)
    {
        var accNoParameter = accNo.HasValue ?
            new ObjectParameter("accNo", accNo) :
            new ObjectParameter("accNo", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteAccount", accNoParameter);
    }

    public virtual int sp_newAccount(ObjectParameter accNo, string accName, string accType, Nullable<int> accBalance, Nullable<int> accBranch)
    {
        var accNameParameter = accName != null ?
            new ObjectParameter("accName", accName) :
            new ObjectParameter("accName", typeof(string));

        var accTypeParameter = accType != null ?
            new ObjectParameter("accType", accType) :
            new ObjectParameter("accType", typeof(string));

        var accBalanceParameter = accBalance.HasValue ?
            new ObjectParameter("accBalance", accBalance) :
            new ObjectParameter("accBalance", typeof(int));

        var accBranchParameter = accBranch.HasValue ?
            new ObjectParameter("accBranch", accBranch) :
            new ObjectParameter("accBranch", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_newAccount", accNo, accNameParameter, accTypeParameter, accBalanceParameter, accBranchParameter);
    }

    public virtual int updateBalance()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateBalance");
    }
}
